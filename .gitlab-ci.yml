stages:
  - build
  - deploy

variables:
  IMAGE_NAME: $DOCKER_HUB_USERNAME/it_school

# --- 1. Build Docker image ---
build_image:
  stage: build
  image: docker:24
  services:
    - docker:24-dind
  script:
    # Логинимся в Docker Hub
    - echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_USERNAME" --password-stdin
    # Собираем образ с тегом SHA и latest
    - docker build -t $IMAGE_NAME:$CI_COMMIT_SHA .
    - docker tag $IMAGE_NAME:$CI_COMMIT_SHA $IMAGE_NAME:latest
    # Пушим оба тега
    - docker push $IMAGE_NAME:$CI_COMMIT_SHA
    - docker push $IMAGE_NAME:latest
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'

# --- 2. Deploy on server ---
deploy_production:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh-client
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan -H $DEPLOY_SERVER >> ~/.ssh/known_hosts
  script:
    - |
      ssh $DEPLOY_USER@$DEPLOY_SERVER "
        docker login -u $DOCKER_HUB_USERNAME -p $DOCKER_HUB_PASSWORD &&
        docker pull $IMAGE_NAME:latest &&
        docker stop it_school || true &&
        docker rm it_school || true &&
        docker run -d --name it_school -p 8000:8000 \
          -e DB_HOST=$DB_HOST \
          -e DB_USER=$DB_USER \
          -e DB_PASS=$DB_PASS \
          -e DB_PORT=$DB_PORT \
          -e DB_NAME=$DB_NAME \
          -e TEST_DB_USER=$TEST_DB_USER \
          -e TEST_DB_PASS=$TEST_DB_PASS \
          -e TEST_DB_HOST=$TEST_DB_HOST \
          -e TEST_DB_PORT=$TEST_DB_PORT \
          -e TEST_DB_NAME=$TEST_DB_NAME \
          -e TOKEN_HERO=$TOKEN_HERO \
          $IMAGE_NAME:latest
      "
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
